{"version":3,"file":"booking-time-picker.js","sourceRoot":"","sources":["booking-time-picker.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,qBAAqB,CAAC;AAU7B,MAAM,OAAO,iBAAkB,SAAQ,UAAU;IAAjD;;QAC6B,iBAAY,GAAwB,EAAE,CAAC;IA8BpE,CAAC;IAvBC,YAAY,CAAC,MAA+B;QAC1C,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM;YAAE,OAAO,EAAE,CAAC;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAC9C,KAAK,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAsB,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,CACzF,CAAC,MAAM,CAAC,CAAC,CAAC,EAAe,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YACtB,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC3C,OAAO,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;oCAGqB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;;;;oCAI5B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;;KAE7D,CAAC;IACJ,CAAC;;AA3BM,wBAAM,GAAG,GAAG,CAAA;;;GAGlB,AAHY,CAGX;AALyB;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;uDAAwC;AA+BpE,cAAc,CAAC,MAAM,CAAC,qBAAqB,EAAE,iBAAiB,CAAC,CAAC","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport './booking-time-slot';\n\n// Define types for better type safety\ninterface AvailabilityItem {\n  startDateTime?: { time: string };\n}\ninterface StaffAvailability {\n  availabilityItems?: AvailabilityItem[];\n}\n\nexport class BookingTimePicker extends LitElement {\n  @property({ type: Array }) availability: StaffAvailability[] = [];\n\n  static styles = css`\n    .section { margin-bottom: 18px; }\n    .label { font-size: 0.98rem; color: #666; margin-bottom: 6px; font-weight: 500; }\n  `;\n\n  getTimeSlots(period: 'morning' | 'afternoon') {\n    if (!this.availability?.length) return [];\n    const slots = this.availability.flatMap(staff =>\n      staff.availabilityItems?.map((item: AvailabilityItem) => item.startDateTime?.time) || []\n    ).filter((t): t is string => typeof t === 'string' && !!t);\n    return slots.filter(t => {\n      const hour = parseInt(t.split(':')[0], 10);\n      return period === 'morning' ? hour < 12 : hour >= 12;\n    });\n  }\n\n  render() {\n    return html`\n      <div class=\"section\">\n        <div class=\"label\">Morning</div>\n        <booking-time-slot .times=${this.getTimeSlots('morning')}></booking-time-slot>\n      </div>\n      <div class=\"section\">\n        <div class=\"label\">Afternoon</div>\n        <booking-time-slot .times=${this.getTimeSlots('afternoon')}></booking-time-slot>\n      </div>\n    `;\n  }\n}\ncustomElements.define('booking-time-picker', BookingTimePicker);"]}